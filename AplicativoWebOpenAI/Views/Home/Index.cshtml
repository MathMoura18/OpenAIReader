@{
    ViewData["Title"] = "Home";
}
<div class="section">
    <div class="file-container">
        <input type="file" id="input-file"/>
@*         <iframe src="C:\Users\Matheus\Documents\Curriculo\MatheusMouraEng.pdf"/>
 *@    </div>
</div>
<div class="section">
    <div class="chat-box">
        <div id="chat-conteiner">
            <div><strong>ChatGPT:</strong> <p id="gpt-text">Hello! How can I assist you today?</p></div>
            <div id="chat">

            </div>
            <div id="input-button">
                <input id="input-chat" placeholder="Enter your question..."/>
                <button id="button-enviar" onclick="EnviarPergunta()"><i class="fa-solid fa-paper-plane"></i></button>
            </div>
        </div>
    </div>
</div>

<style>
    #input-button {
        display: flex;
        gap: 12px;
    }

    #input-chat {
        display: flex;
        width: 100%;
        border: 1px solid #555555;
        border-radius: 20px;
        background-color: gray;
        color: white;
    }

        #input-chat:focus{
            background-color: #444444;
            border: 2px solid white;
        }

    #button-enviar {
        background-color: #555555;
        border: none;
        color: white;
        padding: 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        border-radius: 50%;
        transition: background-color 0.2s;
    }

        #button-enviar:hover{
            background-color: #222222;
        }

    #gpt-text {
        position: relative;
    }

    #gpt-text::before {
        position:absolute;
        width: 0; 
        overflow:hidden;
        animation: animate 10s linear;
        border-right: 2px solid gray;
    }
    
    @@keyframes animate {
        from {
            width: 0;
        }

        to {
            width: 100%;
        }
    }

</style>

@section Scripts {
    <script>
        const chatContainer = document.getElementById("chat");
        const fileContainer = $(".file-container");
        const inputFile = $("#input-file");
        const file = document.getElementById("input-file").files[0];

        inputFile.on("change", SendFileToAI());

        function EnviarPergunta() {
            let text = $('#input-chat').val();
            DisableChat();

            if (StrIsNull(text)){
                const message = document.createElement('div');
                message.classList.add("chat")
                let html = "<div><strong>ChatGPT:</strong> <p>Insert your question</p></div>";
                message.innerHTML = html;
                chatContainer.append(message)
                
                AbleChat();
            }
            else {
                $("#input-chat").val("");
                const message = document.createElement('div');
                let html = "<div><strong>You:</strong>" + text + "</div>";
                message.innerHTML = html; 
                chatContainer.append(message)
                
                $.ajax({
                    type: "GET",
                    dataType: 'json',
                    url: '@Url.Action("GetAISentence", "OpenAI")',
                    data: { text: text },
                    success: function (result) {
                        if (!StrIsNull(result)) {
                            const message = document.createElement('div');
                            message.classList.add("chat")
                            let html = '<strong>ChatGPT:</strong> <p id="gpt-text">' + result + '</p>';
                            message.innerHTML = html;
                            chatContainer.append(message)

                            AbleChat()
                        }
                        else {
                            const message = document.createElement('div');
                            message.classList.add("chat")
                            let html = "<strong>Error with OpenAI</strong>";
                            message.innerHTML = html;
                            chatContainer.append(message)

                            AbleChat()
                        }
                    },
                    error: function (erro) {
                        const message = document.createElement('div');
                        message.classList.add("chat")
                        let html = '<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-sm">Error</button><div class="modal fade bd-example-modal-sm" tabindex = "-1" role = "dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true"><div class="modal-dialog modal-sm"><div class="modal-content"> Error: ${ erro.statusText }</div></div></div>';
                        message.innerHTML = html;
                        body.append(message)

                        console.log(`${erro.statusText} ${erro.responseText}`);
                        AbleChat()
                    }
                });
            }
        }

        function SendFileToAI() {
            ShowFileinView();

            $.ajax({
                type: "GET",
                dataType: 'json',
                url: '@Url.Action("fdsa", "OpenAI")',
                data: { text: text },
                success: function (result) {
                    if (!StrIsNull(result)) {
                        const message = document.createElement('div');
                        message.classList.add("chat")
                        let html = '<strong>ChatGPT:</strong> <p id="gpt-text">' + result + '</p>';
                        message.innerHTML = html;
                        chatContainer.append(message)

                        AbleChat()
                    }
                    else {
                        const message = document.createElement('div');
                        message.classList.add("chat")
                        let html = "<strong>Error with OpenAI</strong>";
                        message.innerHTML = html;
                        chatContainer.append(message)

                        AbleChat()
                    }
                },
                error: function (erro) {
                    const message = document.createElement('div');
                    message.classList.add("chat")
                    let html = '<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-sm">Error</button><div class="modal fade bd-example-modal-sm" tabindex = "-1" role = "dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true"><div class="modal-dialog modal-sm"><div class="modal-content"> Error: ${ erro.statusText }</div></div></div>';
                    message.innerHTML = html;
                    body.append(message)

                    console.log(`${erro.statusText} ${erro.responseText}`);
                    AbleChat()
                }
            });
        }

        function ShowFileinView () {
            console.log(file);
            const img = document.createElement("img");
            img.classList.add("file-container");
            img.file = file;
            fileContainer.append(file);

            const reader = new FileReader();
            reader.onload = (e) => {
                img.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }

        $("#input-chat").on('keyup', function (e) {
            if (e.key === 'Enter' || e.keyCode === 13) {
                EnviarPergunta();
            }
        });

        function StrIsNull(String) {
            if (String == null || String == "" || String == undefined || String == "undefined")
                return true;
            else
                return false;
        }

        function AbleChat (){
            $('#input-chat').prop("disabled", false);
            $('#button-enviar').prop("disabled", false);
        }

        function DisableChat() {
            $('#input-chat').prop("disabled", true);
            $('#button-enviar').prop("disabled", true);
        }
    </script>
}